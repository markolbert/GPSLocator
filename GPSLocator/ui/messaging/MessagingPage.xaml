<Page
    x:Class="J4JSoftware.GPSLocator.MessagingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:J4JSoftware.GPSLocator"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:DefaultBindMode="OneWay"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.Resources>

            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="14,7,14,7"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="14,7,14,7"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="Button">
                <Setter Property="Margin" Value="14,7,14,7"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
            </Style>

            <Style TargetType="CheckBox">
                <Setter Property="Margin" Value="14, 7, 14,0"/>
            </Style>

            <Style TargetType="NumberBox">
                <Setter Property="Margin" Value="14,7,14,7"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="ListView">
                <Setter Property="Margin" Value="14,7,14,7"></Setter>
            </Style>

        </Grid.Resources>

        <TextBlock Grid.Row="0" Grid.Column="0"
                   Padding="0,7,0,0"
                   VerticalAlignment="Top">
            Days Back
        </TextBlock>

        <StackPanel Grid.Row="0" Grid.Column="1"
                    Orientation="Vertical">

            <NumberBox Value="{x:Bind ViewModel.DaysBack, Mode=TwoWay}"
                       Minimum="1"
                       Maximum="31"
                       SmallChange="1"
                       LargeChange="7" 
                       SpinButtonPlacementMode="Compact"/>

            <Button IsEnabled="{x:Bind ViewModel.RefreshEnabled}"
                    Command="{x:Bind ViewModel.RefreshCommand}">
                Refresh
            </Button>

        </StackPanel>

        <TextBlock Grid.Row="1" Grid.Column="0">End Date</TextBlock>
        <TextBlock Grid.Row="1" Grid.Column="1" Text="{x:Bind ViewModel.EndDate}"/>

        <TextBlock Grid.Row="2" Grid.Column="0">Start Date</TextBlock>
        <TextBlock Grid.Row="2" Grid.Column="1" Text="{x:Bind ViewModel.StartDate}"/>

        <TextBlock Grid.Row="3" Grid.Column="0"
                   VerticalAlignment="Top">
            <Run Text="Messages ("/>
            <Run Text="{x:Bind ViewModel.AllPoints.Count}"/>
            <Run Text=")"/>
        </TextBlock>

        <Border Grid.Row="3" Grid.Column="1"
                BorderThickness="2"
                BorderBrush="DarkGray">

            <ListView HorizontalAlignment="Left"
                      VerticalAlignment="Top"
                      ItemsSource="{x:Bind ViewModel.AllPoints}"
                      SelectedItem="{x:Bind ViewModel.SelectedPoint, Mode=TwoWay}">

                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="local:MapPoint">
                        <TextBlock Text="{x:Bind DeviceLocation.Timestamp}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>

        </Border>

        <TextBlock Grid.Row="0" Grid.Column="2"
                   Padding="0,7,0,0"
                   VerticalAlignment="Top">
            Message
        </TextBlock>

        <StackPanel Grid.Row="0" Grid.Column="3"
                    Orientation="Vertical">

            <TextBox Text="{x:Bind ViewModel.MessageToSend, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     IsSpellCheckEnabled="False"/>

            <TextBlock Visibility="{x:Bind ViewModel.MessageTooLong, Converter={StaticResource TrueToVisibleConverter}}"
                       Foreground="DarkOrange">
                Message is too long and will be split into separate messages
            </TextBlock>

            <TextBlock FontStyle="Italic">
                Messages can take some time to be delivered.
            </TextBlock>

        </StackPanel>

        <TextBlock Grid.Row="1" Grid.Column="2"
                   Padding="0,7,0,0"
                   VerticalAlignment="Top">
            Callback
        </TextBlock>

        <StackPanel Grid.Row="1" Grid.Column="3"
                    Orientation="Vertical">

            <TextBox Text="{x:Bind ViewModel.Callback, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     ToolTipService.ToolTip="email, phone number (digits only)"
                     IsSpellCheckEnabled="False"/>

            <TextBlock FontStyle="Italic"
                Visibility="{x:Bind ViewModel.CallbackIsValid, Converter={StaticResource FalseToVisibleConverter}}">
                Callback must be an email address or an all-digits phone number
            </TextBlock>

            <Button IsEnabled="{x:Bind ViewModel.SendMessageEnabled }"
                    Command="{x:Bind ViewModel.SendMessageCommandAsync}">
                Send
            </Button>

        </StackPanel>

        <Grid Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2"
              RowDefinitions="Auto, Auto"
              ColumnDefinitions="Auto, Auto">

            <TextBlock Grid.Row="0" Grid.Column="0"
                       Visibility="{x:Bind ViewModel.SelectedPoint, Converter={StaticResource NullToHiddenConverter}}">
                Selected Recipients
            </TextBlock>

            <ListView Grid.Row="0" Grid.Column="1"
                      Visibility="{x:Bind ViewModel.SelectedPoint, Converter={StaticResource NullToHiddenConverter}}"
                      ItemsSource="{x:Bind ViewModel.SelectedPoint.DeviceLocation.Recipients}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock HorizontalAlignment="Left" 
                                   Text="{Binding}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <TextBlock Grid.Row="1" Grid.Column="0"
                       VerticalAlignment="Top"
                       Visibility="{x:Bind ViewModel.SelectedPoint, Converter={StaticResource NullToHiddenConverter}}">
                Selected Message
            </TextBlock>

            <TextBlock Grid.Row="1" Grid.Column="1"
                       VerticalAlignment="Top"
                       Visibility="{x:Bind ViewModel.SelectedPoint, Converter={StaticResource NullToHiddenConverter}}"
                       Text="{x:Bind ViewModel.SelectedPoint.DeviceLocation.TextMessage}">
            </TextBlock>

        </Grid>

    </Grid>
</Page>
